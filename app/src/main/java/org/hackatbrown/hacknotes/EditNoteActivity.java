package org.hackatbrown.hacknotes;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NavUtils;
import androidx.lifecycle.LiveData;

import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.EditText;

import org.hackatbrown.hacknotes.data.Note;
import org.hackatbrown.hacknotes.data.NotesDatabase;

public class EditNoteActivity extends AppCompatActivity {
    private long noteId;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_edit_note);

        // Below here is new:

        // Retrieve the ID passed in from NotesListActivity
        Intent intent = getIntent();
        noteId = intent.getLongExtra("org.hackatbrown.hacknotes.NOTE_ID", 0);

        // findViewById looks up a component (view) by the ID we set in the layout file
        // R is an autogenerated class which contains these IDs and other values like images
        final EditText titleText = findViewById(R.id.noteTitle);
        final EditText contentText = findViewById(R.id.noteContent);

        // The .note method on NotesDatabase returns a LiveData<Note>. LiveData is a wrapper which
        // lets us get notified every time the note changes. Its observe method binds the callback
        // to the lifecycle of this Activity, so it'll stop receiving updates when the user switches
        // away to another Activity.
        NotesDatabase.getInstance(this).note(noteId).observe(this, note -> {
            // Set the content of the two text fields
            titleText.setText(note.getTitle());
            contentText.setText(note.getContent());
        });
    }

    public void saveNote(View button) {
        // As before, look up the two text field views.
        EditText titleText = findViewById(R.id.noteTitle);
        EditText contentText = findViewById(R.id.noteContent);

        Note note = new Note();
        note.setId(noteId);
        // This time, we use .getText() to get the values that the user typed in
        note.setTitle(titleText.getText().toString());
        note.setContent(contentText.getText().toString());
        // After creating an updated Note object, we can save it to the database.
        NotesDatabase.getInstance(this).save(note);

        // After the note is saved, we can switch back to NotesListActivity
        startActivity(new Intent(this, NotesListActivity.class));
    }
}
